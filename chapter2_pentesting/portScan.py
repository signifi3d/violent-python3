'''
    Note:
        - There is an argument parsing error in the book that comes up
        several times where the author tries to parse a list of arguments
        delimited by ', ' however in optparse the assumed functionality
        doesn't exist and required various workarounds. Conveniently, 
        argparse does have such a functionality which is why the string 
        split has been removed. However, take note that the argument list
        in the command should only be delimited by a space and no commas.
'''
import argparse
from socket import *
from threading import *


screenLock = Semaphore(value=1)


def connScan(tgtHost, tgtPort):
    try:
        connSkt = socket(AF_INET, SOCK_STREAM)
        connSkt.connect((tgtHost, tgtPort))
        connSkt.send('ViolentPython\r\n'.encode('utf-8'))
        results = connSkt.recv(100)
        screenLock.acquire()
        print('[+] %d/tcp open'% tgtPort)
        print('[+] ' + results.decode())
    except Exception:
        screenLock.acquire()
        print('[-] %d/tcp closed'% tgtPort)
    finally:
        screenLock.release()
        connSkt.close()


def portScan(tgtHost, tgtPorts):
    try:
        tgtIP = gethostbyname(tgtHost)
    except:
        print("[-] Cannot resolve '%s': Unknown host"% tgtHost)
        return
    try:
        tgtName = gethostbyaddr(tgtIP)
        print('\n[+] Scan Results for: ' + tgtName[0])
    except:
        print('\n[+] Scan Results for: ' + tgtIP)
    setdefaulttimeout(1)

    for tgtPort in tgtPorts:
        t = Thread(target=connScan, args=(tgtHost, int(tgtPort)))
        t.start()


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument(
        '-H', dest='tgtHost', type=str, 
        required=True, help='specify target host')
    parser.add_argument(
        '-p', dest='tgtPort', type=str,
        required=True, nargs='+',
        help='specify target port[s] separated by a space')
    options = parser.parse_args()

    tgtHost = options.tgtHost
    tgtPorts = options.tgtPort

    portScan(tgtHost, tgtPorts)


if __name__ == "__main__":
    main()
